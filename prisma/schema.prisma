// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  password    String
  createdTime DateTime   @default(now())
  updatedTime DateTime?  @updatedAt
  isDeleted   Boolean    @default(false)
  roleId      Int

  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  bookReviews BookReview[]
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  createdTime DateTime   @default(now())
  updatedTime DateTime?  @updatedAt
  isDeleted   Boolean    @default(false)

  users User[]
}

model Book {
  id              Int       @id @default(autoincrement())
  title           String
  author          String
  publicationDate DateTime
  bookCover       String?
  createdTime     DateTime  @default(now())
  updatedTime     DateTime?
  isDeleted       Boolean    @default(false)
  reviews         BookReview[]
}

model BookReview {
  id             Int          @id @default(autoincrement())
  rating         Int
  reviewText     String        @db.VarChar(500)
  dateOfReview   DateTime
  bookId         Int
  userId         Int
  book           Book          @relation(fields: [bookId], references: [id], onDelete: Cascade)
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdTime    DateTime      @default(now())
  updatedTime    DateTime?
  isDeleted      Boolean       @default(false)
}